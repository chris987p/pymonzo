[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pymonzo"
authors = [{name = "PaweÅ‚ Adamczak", email = "pawel.ad@gmail.com"}]
readme = "README.md"
requires-python = ">=3.7"
license = {file = "LICENSE"}
keywords = ["monzo", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version", "description"]

dependencies = [
  "Authlib",
  "httpx",
  "pydantic<2",
]

[project.optional-dependencies]
tests = [
  "polyfactory",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "pytest-recording",
  "python-dotenv",
  "vcrpy-encrypt",
]
docs = [
  "mkdocs",
  "mkdocs-gen-files",
  "mkdocs-include-markdown-plugin",
  "mkdocs-literate-nav",
  "mkdocs-material",
  "mkdocs-section-index",
  "mkdocstrings[python]",
]
dev = [
  "pymonzo[tests,docs]",
  # Code style
  "interrogate",
  "black",
  "isort",
  "ruff",
  # Type checking
  "mypy",
  # Misc
  "flit",
  "nox",
]

[project.urls]
Home = "https://github.com/pawelad/pymonzo"

[tool.black]
target-version = ["py37"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.interrogate]
ignore-init-module = true
ignore-nested-classes = true
fail-under = 95

[tool.isort]
profile = "black"
src_paths = ["src"]

[tool.mypy]
python_version = "3.7"
mypy_path = "src"

[[tool.mypy.overrides]]
module = [
  "authlib.integrations.httpx_client",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --import-mode=importlib --verbose"
testpaths = "tests"
pythonpath = "src"


[tool.ruff]
target-version = "py37"
select = [
  "A",  # flake8-builtins
  "ANN",  # flake8-annotations
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "C90",  # mccabe
  "D",  # pydocstyle
  "DJ",  # flake8-django
  "E",  # flake8
  "F",  # flake8
  "N",  # pep8-naming
  "PT",  # flake8-pytest-style
  "S",  # flake8-bandit
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "TRY",  # tryceratops
  "UP",  # pyupgrade
]
ignore = [
  "A003",  # Class attribute is shadowing a python builtin
  "ANN101",  # Missing type annotation for `self` in method
  "ANN102",  # Missing type annotation for `cls` in classmethod
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
  "D104",  # Missing docstring in public package
  "D106",  # Missing docstring in public nested class
  "N818",  #  Exception name should be named with an Error suffix
  "S101",  # Use of `assert` detected
  "TRY003",  # Avoid specifying long messages outside the exception class
]

[tool.ruff.pydocstyle]
convention = "google"
